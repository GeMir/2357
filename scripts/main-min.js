var SVG_WIDTH=window.innerWidth,SVG_HEIGHT=window.innerHeight,s=new Snap(SVG_WIDTH,SVG_HEIGHT),PRIMES=[2,3,5,7,11,13,17,19,23,29,31,37],LARGEST_PRIME=PRIMES[PRIMES.length-1],HOLE_COLUMNS=7,HOLE_ROWS=PRIMES.length,SVG_CENTER_X=Math.floor(SVG_WIDTH/2),SVG_CENTER_Y=Math.floor(SVG_HEIGHT/2),LABEL_HEIGHT=90,PLACEHOLDER_RADIUS=11,PLACEHOLDER_MARGIN=4,CARD_WIDTH=2*HOLE_COLUMNS*(PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS),CARD_HEIGHT=2*HOLE_ROWS*(PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS)+LABEL_HEIGHT,CARD_FILL_COLOR=
"#ffffff",CARD_STROKE_COLOR="none",CARD_STROKE_WIDTH=0,CARD_BORDER_RADIUS=14,CARD_FONT_FAMILY="Open Sans",CARD_FONT_STYLE="normal",STRIPE_HEIGHT=2*(PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS),STRIPE_COLORS=["#e82941","#ff6e00","#00c049","#1aa1e1","#a2aaaf"],stripe_color_index=0,PLACEHOLDER_FILL_COLOR="none",PLACEHOLDER_STROKE_COLOR="#afafaf",PLACEHOLDER_FONT_COLOR="#ffffff",PLACEHOLDER_FONT_STYLE="normal",PLACEHOLDER_STROKE_WIDTH=0,PLACEHOLDER_FONT_SIZE=14,PLACEHOLDER_OPACITY=.75,DELETE_BUTTON_MIN_RADIUS=
7,DELETE_BUTTON_MAX_RADIUS=14,NEW_CARD_BUTTON_MIN_RADIUS=Math.floor(SVG_HEIGHT/30),NEW_CARD_BUTTON_MAX_RADIUS=40,NEW_CARD_BUTTON_MARGIN=60,CARD_MARGIN=20,MOVING_TIME=400,HEADLINE_FONT_FAMILY="Open Sans",HEADLINE_FONT_SIZE="24px",HEADLINE_FONT_STYLE="normal",HEADLINE_COLOR="#ffffff",headline=s.text(SVG_CENTER_X,-10,""),title="",cards_array=[],result_ready=!1,add_new_card_lock=!1,result_card=new Card(1);document.title="Primkarten";console.log("------------------------------------");console.log("Snap.svg version: 0.4.1");
console.log("------------------------------------");console.log("SVG dimensions: "+SVG_WIDTH+"px \u00d7 "+SVG_HEIGHT+"px");console.log("SVG center: ("+SVG_CENTER_X+"; "+SVG_CENTER_Y+")");console.log("------------------------------------");function fillZeroes(a,b){for(var c=a;c.length<b;)c="0"+c;return c}function getID(){return fillZeroes(Math.floor(1E3*Math.random()+1),4)}
function getColor(){var a=STRIPE_COLORS[stripe_color_index];stripe_color_index=(stripe_color_index+1)%STRIPE_COLORS.length;return a}function killRedundantCards(a){if(cards_array.length>a)for(;a<cards_array.length;a++)cards_array[a].killIt()}function cardsArrayToDecompositionsString(){for(var a="",b=0;b<cards_array.length;b++)a+="Card "+b+": "+decompositionToString(cards_array[b].prime_decomposition)+"\n";return a}
function deleteFromCardArray(a){for(var b=0;b<cards_array.length;b++)cards_array[b].id===a&&(cards_array.splice(b,1),console.log("Card #"+a+" was removed."))}function setCardLock(a){for(a=0;a<cards_array.length;a++)cards_array[a].is_editable=!1}function decompositionToString(a){var b="",c;for(c in a)b+=c+"^"+a[c]+" ";return b}function decompositionToValue(a){var b=1,c;for(c in a)b*=Math.pow(c,a[c]);return b}
function setHeadline(a,b){if(b){var c=s.rect(0,0,SVG_WIDTH,5).attr({fill:"#E82941",opacity:0});c.animate({opacity:1},150,mina.linear,function(){c.animate({opacity:0},900,mina.linear)})}headline.remove();headline=s.text(SVG_CENTER_X,50,a);headline.attr({"font-family":HEADLINE_FONT_FAMILY,fill:HEADLINE_COLOR,"font-size":HEADLINE_FONT_SIZE,"font-style":HEADLINE_FONT_STYLE,"text-anchor":"middle","dominant-baseline":"middle",opacity:0});headline.animate({opacity:1},300,mina.linear)}
function roundedAtBottom(a,b,c,e,d){return"M"+a+","+b+"h"+c+"v"+(e-d)+"a"+d+","+d+" 0 0 1 "+-d+","+d+"h"+(2*d-c)+"a"+d+","+-d+" 0 0 1 "+-d+","+-d+"Z"}
function drawOnscreenText(a){a=s.text(SVG_CENTER_X-2.5*CARD_WIDTH-5*CARD_MARGIN,SVG_CENTER_Y,a+" von");var b=s.text(SVG_CENTER_X-CARD_WIDTH+CARD_MARGIN,SVG_CENTER_Y,"und"),c=s.text(SVG_CENTER_X+CARD_WIDTH/2+4*CARD_MARGIN,SVG_CENTER_Y,"ist");a=[a,b,c];for(b=0;b<a.length;b++)a[b].attr({fill:"#A3A3A3","font-family":CARD_FONT_FAMILY,"font-style":"italic","font-size":"40px","text-anchor":"middle","dominant-baseline":"middle"})}
function primeDecompose(a){for(var b={},c=2;c<=a;c++)for(;0===a%c;)b[c]=void 0===b[c]?1:b[c]+1,a/=c;return b}function calculatePrimeDecomposition(a){var b={},c;for(c in MANY_PRIMES)for(;0===a%c;)b[c]=void 0===b[c]?1:b[c]+1,a/=c;return b}function calculateIntersection(a,b){var c={},e;for(e in a)void 0!==a[e]&&void 0!==b[e]&&(c[e]=a[e]<=b[e]?a[e]:b[e]);return c}function dotsMapToValue(a){var b=1,c;for(c in a)for(var e=0;e<a[c].length;e++)1===a[c][e]&&(b*=c);return b}
function dotsMapToString(a){var b="",c;for(c in a){for(var b=b+(fillZeroes(c,2)+" "),e=0;e<a[c].length;e++)b=1===a[c][e]?b+"o":b+".";b+="\n"}return b}function calculateMissingValueGCD(a,b){var c={},e;for(e in b)b[e]<=a[e]&&(c[e]=b[e]);return decompositionToValue(c)}
function calculateReverseGreatestCommonDivisor(a,b){var c={2:[2,2,2,2,2,2,2],3:[2,2,2,2,2,2,2],5:[2,2,2,2,2,2,2],7:[2,2,2,2,2,2,2],11:[2,2,2,2,2,2,2],13:[2,2,2,2,2,2,2],17:[2,2,2,2,2,2,2],19:[2,2,2,2,2,2,2],23:[2,2,2,2,2,2,2],29:[2,2,2,2,2,2,2],31:[2,2,2,2,2,2,2],37:[2,2,2,2,2,2,2]},e={value:1,map:c},d;for(d in a)if(void 0!==a[d]&&void 0===b[d]&&(c[d]=[3,3,3,3,3,3,3]),void 0!==a[d]&&void 0!==b[d]&&a[d]>b[d])for(var f=b[d];f<HOLE_COLUMNS;f++)c[d][f]=3;for(d in b)for(f=0;f<b[d];f++)c[d][f]=1;e.value=
dotsMapToValue(c);return e}function calculateReverseLeastCommonMultiple(a,b){var c={2:[3,3,3,3,3,3,3],3:[3,3,3,3,3,3,3],5:[3,3,3,3,3,3,3],7:[3,3,3,3,3,3,3],11:[3,3,3,3,3,3,3],13:[3,3,3,3,3,3,3],17:[3,3,3,3,3,3,3],19:[3,3,3,3,3,3,3],23:[3,3,3,3,3,3,3],29:[3,3,3,3,3,3,3],31:[3,3,3,3,3,3,3],37:[3,3,3,3,3,3,3]},e={value:1,map:c},d;for(d in b)if(void 0!==b[d])for(var f=0;f<b[d];f++)c[d][f]=2;return e}function tooLargePrimeFactor(a){for(var b in a)if(parseInt(b,10)>LARGEST_PRIME)return!0;return!1}
function tooManyEqualPrimeFactors(a,b){for(var c in b)if(b[c]>a)return!0;return!1}function calculateLeastCommonMultipleDecomposition(a,b){if(a==={})return b;if(b==={})return a;for(var c in b)if(void 0===a[c]||a[c]<b[c])a[c]=b[c];console.log("Least common multiple decomposition: "+decompositionToString(a));return a}
function Card(a){function b(a,d,b){this.row=a;this.column=d;this.type=b;this.body=s.group();this.clickIt=function(a){a=parseInt(this.data("row"),10);var d=parseInt(this.data("column"),10),b=!0;console.log("Clicked: ("+a+"; "+d+")");(b=c.editHole(a,d))?console.log(dotsMapToString(c.dots_map)):console.log("Wrong place!")};this.drawIt=function(){var a=c.x+(2*this.column+1)*(PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS),d=c.y+(2*this.row+1)*(PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS);switch(this.type){case "number":var b=
s.text(a,d,PRIMES[this.row]);b.attr({"font-family":"Open Sans","font-weight":"bold","font-style":PLACEHOLDER_FONT_STYLE,fill:PLACEHOLDER_FONT_COLOR,"font-size":PLACEHOLDER_FONT_SIZE+"px","text-anchor":"middle","dominant-baseline":"middle",opacity:PLACEHOLDER_OPACITY,cursor:"pointer"});b.data("row",this.row);b.data("column",this.column);b.click(this.clickIt);break;case "possible hole":b=s.circle(a,d,PLACEHOLDER_RADIUS-4);b.attr({stroke:"#fff","stroke-width":2,fill:"#fff","fill-opacity":0,opacity:PLACEHOLDER_OPACITY,
cursor:"pointer"});b.data("row",this.row);b.data("column",this.column);b.click(this.clickIt);break;case "impossible hole":b=PLACEHOLDER_RADIUS-6,b=s.path("M "+(a-b)+", "+(d-b)+"L "+(a+b)+", "+(d+b)+" M "+(a-b)+", "+(d+b)+" L "+(a+b)+", "+(d-b)),b.attr({stroke:"#fff","stroke-width":2,"stroke-linecap":"round",opacity:PLACEHOLDER_OPACITY}),b.data("row",this.row),b.data("column",this.column)}b.appendTo(this.body)}}var c=this;this.id=getID();this.value=a;this.y=this.x=0;this.opacity=1;this.color=getColor();
this.label_font_size=32;this.is_removed=!1;this.is_editable=!0;this.is_result_card=!1;this.prime_decomposition=primeDecompose(this.value);this.dots_map={2:[0,0,0,0,0,0,0],3:[0,0,0,0,0,0,0],5:[0,0,0,0,0,0,0],7:[0,0,0,0,0,0,0],11:[0,0,0,0,0,0,0],13:[0,0,0,0,0,0,0],17:[0,0,0,0,0,0,0],19:[0,0,0,0,0,0,0],23:[0,0,0,0,0,0,0],29:[0,0,0,0,0,0,0],31:[0,0,0,0,0,0,0],37:[0,0,0,0,0,0,0]};this.card_group=s.group();this.mask_group=s.group();this.adjustFontSize=function(){var a=(this.value+"").length;this.label_font_size=
13<a?18:11<a?22:9<a?24:32;this.card_group.select("#label").animate({"font-size":this.label_font_size},200,mina.linear)};this.updateValueUsingDecomposition=function(a){var b=this.value;this.value=decompositionToValue(a);console.log("Value updated: "+b+" \u2192 "+this.value)};this.updatePrimeDecompositionUsingValue=function(a){var b=this.prime_decomposition;this.prime_decomposition=primeDecompose(a);console.log("Prime decomposition updated: "+decompositionToString(b)+" \u2192 "+decompositionToString(this.prime_decomposition))};
this.updateDotsMap=function(){this.prime_decomposition=primeDecompose(this.value);for(var a in this.prime_decomposition)for(var b=0;b<this.prime_decomposition[a];b++)this.dots_map[a][b]=1;console.log("Card #"+this.id+" dots map:\n"+dotsMapToString(this.dots_map))};this.updateValueAndDecomposition=function(){var a=this.value,b=1,c;for(c in this.dots_map)for(var g=0;g<this.dots_map[c].length;g++)1===this.dots_map[c][g]&&(b*=c);this.value=b;this.adjustFontSize();this.prime_decomposition=primeDecompose(b);
this.card_group.select("#label").attr({text:b});console.log("Card value updated: "+a+" \u2192 "+b)};this.updateHolesMask=function(){for(var a=0;a<HOLE_ROWS;a++)for(var b=0;b<HOLE_COLUMNS;b++)if(1===this.dots_map[PRIMES[a]][b]){var c=s.circle(this.x+PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS+2*b*(PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS),this.y+PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS+2*a*(PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS),PLACEHOLDER_RADIUS);c.attr({stroke:"none",fill:"#000000",id:"r"+a+"c"+b,"class":"hole"});
c.appendTo(this.mask_group)}};this.editHole=function(a,b){if(0!==this.dots_map[PRIMES[a]][b]||1!==this.dots_map[PRIMES[a]][b-1]&&0!==b||0!==this.dots_map[PRIMES[a]][b+1]&&b!==HOLE_COLUMNS-1){if(1!==this.dots_map[PRIMES[a]][b]||1!==this.dots_map[PRIMES[a]][b-1]&&0!==b||0!==this.dots_map[PRIMES[a]][b+1]&&b!==HOLE_COLUMNS-1)return!1;this.mask_group.selectAll("#r"+a+"c"+b).remove();this.dots_map[PRIMES[a]][b]=0;this.value/=PRIMES[a];this.prime_decomposition[PRIMES[a]]=void 0===this.prime_decomposition[PRIMES[a]]?
1:this.prime_decomposition[PRIMES[a]]+1;this.card_group.select("#label").attr({text:this.value});return!0}var f=s.circle(this.x+PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS+2*b*(PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS),this.y+PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS+2*a*(PLACEHOLDER_MARGIN+PLACEHOLDER_RADIUS),PLACEHOLDER_RADIUS);f.attr({stroke:"none",fill:"#000000",id:"r"+a+"c"+b,"class":"hole"});f.appendTo(c.mask_group);this.dots_map[PRIMES[a]][b]=1;this.value*=PRIMES[a];this.prime_decomposition[PRIMES[a]]=
void 0===this.prime_decomposition[PRIMES[a]]?1:this.prime_decomposition[PRIMES[a]]+1;this.card_group.select("#label").attr({text:this.value});return!0};this.eraseIt=function(){this.card_group=s.group()};this.drawIt=function(){this.updateDotsMap();var a=s.path(roundedAtBottom(this.x,this.y,CARD_WIDTH,CARD_HEIGHT,CARD_BORDER_RADIUS));a.attr({stroke:"none",fill:CARD_FILL_COLOR,id:"card_body"});a.appendTo(this.card_group);for(a=0;a<HOLE_ROWS;a++){var d=1-a/(HOLE_ROWS+1),f=s.rect(this.x,this.y+a*STRIPE_HEIGHT,
CARD_WIDTH-CARD_STROKE_WIDTH,STRIPE_HEIGHT);f.attr({stroke:"none",strokeWidth:0,fill:this.color,opacity:d});f.appendTo(this.card_group)}for(a=0;a<PRIMES.length;a++)for(d=0;d<HOLE_COLUMNS;d++){f="number";switch(this.dots_map[PRIMES[a]][d]){case 0:f="number";break;case 1:f="number";break;case 2:f="possible hole";break;case 3:f="impossible hole"}f=new b(a,d,f);f.body.appendTo(this.card_group);f.drawIt()}a=s.text(this.x+Math.floor(CARD_WIDTH/2),this.y+STRIPE_HEIGHT*HOLE_ROWS+Math.floor((CARD_HEIGHT-STRIPE_HEIGHT*
HOLE_ROWS)/2),this.value);a.attr({id:"label","font-family":CARD_FONT_FAMILY,"font-style":CARD_FONT_STYLE,fill:"#516262","font-size":this.label_font_size+"px","text-anchor":"middle","dominant-baseline":"middle"});a.appendTo(this.card_group);var g=s.group(),a=s.circle(this.x+CARD_WIDTH,this.y,DELETE_BUTTON_MIN_RADIUS);a.attr({fill:this.color});d=Math.floor(DELETE_BUTTON_MIN_RADIUS/2);d=s.path("M "+(this.x+CARD_WIDTH-d)+", "+(this.y+d)+"L "+(this.x+CARD_WIDTH+d)+", "+(this.y-d)+" M "+(this.x+CARD_WIDTH-
d)+", "+(this.y-d)+" L "+(this.x+CARD_WIDTH+d)+", "+(this.y+d));d.attr({stroke:"#353535","stroke-width":1.25,"stroke-linecap":"round"});a.appendTo(g);d.appendTo(g);a=s.rect(this.x,this.y-(DELETE_BUTTON_MAX_RADIUS+5),CARD_WIDTH+(DELETE_BUTTON_MAX_RADIUS+5),CARD_HEIGHT+(DELETE_BUTTON_MAX_RADIUS+5),0,0);a.attr({fill:"#ffffff",id:"mask_body"});a.appendTo(this.mask_group);this.updateHolesMask();this.card_group.attr({mask:this.mask_group,opacity:this.opacity});g.attr({cursor:"pointer"});g.mouseover(function(a){a=
DELETE_BUTTON_MAX_RADIUS/DELETE_BUTTON_MIN_RADIUS;g.animate({transform:"S "+a+", "+a},75,mina.linear)});g.mouseout(function(a){g.animate({transform:"S 1, 1"},75,mina.linear)});g.click(c.killIt);g.appendTo(this.card_group)};this.moveIt=function(a,b,c){this.card_group.animate({transform:"t "+a+", "+b},MOVING_TIME,mina.linear,c)};this.hideIt=function(a){0<this.card_group.attr("opacity")&&this.card_group.animate({opacity:0},MOVING_TIME,mina.linear,a)};this.unhideIt=function(a){1>this.card_group.attr("opacity")&&
this.card_group.animate({opacity:1},MOVING_TIME,mina.linear,a)};this.killIt=function(){c.is_editable?c.hideIt(deleteFromCardArray(c.id)):(setHeadline("Die Karte ist vom L\u00f6schen gesch\u00fctzt!",!0),console.log("The card is protected!"))}}
function NewCardButton(){function a(a){a=e.new_card_button_group.transform().localMatrix.toTransformString();e.new_card_button_group.animate({transform:a+" S 2 2"},75,mina.linear)}function b(a){a=e.new_card_button_group.transform().localMatrix.toTransformString();e.new_card_button_group.animate({transform:a+" S 0.5 0.5"},75,mina.linear)}function c(a){e.moveIt(CARD_WIDTH+CARD_MARGIN,0);a=new Card(1);a.x=Math.floor(SVG_CENTER_X-CARD_WIDTH/2);a.y=Math.floor((SVG_HEIGHT-CARD_HEIGHT)/2);cards_array.push(a);
a.drawIt();for(a=0;a<cards_array.length-1;a++)cards_array[a].moveIt(-Math.floor((cards_array.length-a-1)*(CARD_WIDTH+CARD_MARGIN)),0,0)}var e=this;this.x=SVG_CENTER_X;this.y=SVG_CENTER_Y;this.new_card_button_group=s.group();this.drawIt=function(){var d=s.circle(this.x,this.y,NEW_CARD_BUTTON_MIN_RADIUS);d.attr({fill:"#454545"});d.appendTo(this.new_card_button_group);d=Math.floor(3*NEW_CARD_BUTTON_MIN_RADIUS/5);d=s.path("M "+(this.x-d)+", "+this.y+"h "+2*d+" M "+this.x+", "+(this.y-d)+" v "+2*d);d.attr({stroke:"#ffffff",
"stroke-width":4,"stroke-linecap":"round",opacity:.5});d.appendTo(this.new_card_button_group);this.new_card_button_group.attr({cursor:"pointer"});this.new_card_button_group.click(c);this.new_card_button_group.mouseover(a);this.new_card_button_group.mouseout(b)};this.moveIt=function(a,b){e.new_card_button_group.animate({transform:"t "+a+", "+b},250,mina.linear)}}
function greatestCommonDivisorAnimation(){add_new_card_lock=!0;if(1<cards_array.length){result_ready=!1;null!==result_card&&result_card.killIt();document.title="gr\u00f6\u00dfter gemeinsamer Teiler";result_ready?result_card.unhideIt():setHeadline("gr\u00f6\u00dfter gemeinsamer Teiler",!1);for(var a=0;a<cards_array.length;a++)cards_array[a].moveIt(-Math.floor((CARD_WIDTH+CARD_MARGIN)/2),0,0);var b=cards_array[0].prime_decomposition;console.log("cards_array[0]: "+decompositionToString(b));for(a=1;a<
cards_array.length;a++)console.log("cards_array["+a+"]: "+decompositionToString(cards_array[a].prime_decomposition)),b=calculateIntersection(b,cards_array[a].prime_decomposition);console.log("Intersection of "+cards_array.length+" cards: "+decompositionToString(b));a=decompositionToValue(b);result_ready||(result_ready=!0,result_card=new Card(a),result_card.x=Math.floor(SVG_CENTER_X-CARD_WIDTH/2),result_card.y=Math.floor((SVG_HEIGHT-CARD_HEIGHT)/2),result_card.opacity=0,result_card.drawIt(),result_card.moveIt(Math.floor((CARD_WIDTH+
CARD_MARGIN)/2),0,0),result_card.unhideIt());console.log("Greatest common divisor: "+a)}else setHeadline("Mindestens zwei Karten werden ben\u00f6tigt!",!0),console.log("At least two cards are needed!")}
function leastCommonMultipleAnimation(){var a={},a="",b=1;if(1<cards_array.length){var c=function(){for(var a in cards_array[d].dots_map)for(var b=0;b<HOLE_COLUMNS;b++)1===cards_array[d].dots_map[a][b]&&(result_card.dots_map[a][b]=1,result_card.updateValueAndDecomposition(),result_card.updateHolesMask());d===cards_array.length-1?cards_array[d].moveIt(-Math.floor(CARD_WIDTH+CARD_MARGIN),0):(cards_array[d].moveIt(0,0,e),d++)},e=function(){for(var a=0;a<cards_array.length;a++)cards_array[a].eraseIt(),
cards_array[a].drawIt();cards_array[d].moveIt(Math.floor(CARD_WIDTH+CARD_MARGIN),0,c)};document.title="kleinstes gemeinsames Vielfaches";setHeadline("kleinstes gemeinsames Vielfaches",!1);add_new_card_lock=!0;result_ready=!1;setCardLock(!0);null!==result_card&&result_card.killIt();a=cards_array[0].prime_decomposition;for(b=1;b<cards_array.length;b++)a=calculateLeastCommonMultipleDecomposition(a,cards_array[b].prime_decomposition);a=decompositionToString(a);b=decompositionToValue(a);console.log("Least common multiple decomposition of "+
cards_array.length+" cards: "+a);console.log("Least common multiple: "+b);result_ready||(result_ready=!0,result_card=new Card(1),result_card.x=Math.floor(SVG_CENTER_X-CARD_WIDTH/2),result_card.y=Math.floor((SVG_HEIGHT-CARD_HEIGHT)/2),result_card.opacity=0,result_card.drawIt(),result_card.moveIt(Math.floor(CARD_WIDTH+CARD_MARGIN),0,e),result_card.unhideIt());var d=0}else setHeadline("Mindestens zwei Karten werden ben\u00f6tigt!",!0),console.log("At least two cards are needed!")}
function reverseGreatestCommonDivisorAnimation(){if(1<cards_array.length)if(killRedundantCards(2),add_new_card_lock=!0,setCardLock(!0),document.title="gr\u00f6\u00dfter gemeinsamer Teiler \u00bbr\u00fcckw\u00e4rts\u00ab",0===cards_array[0].value%cards_array[1].value){if(result_ready=!1,null!==result_card&&result_card.killIt(),drawOnscreenText("ggT"),cards_array[0].moveIt(-2*(CARD_WIDTH-CARD_MARGIN),0,0),cards_array[1].moveIt(2*(CARD_WIDTH-CARD_MARGIN),0,0),!result_ready){setHeadline("gr\u00f6\u00dfter gemeinsamer Teiler \u00bbr\u00fcckw\u00e4rts\u00ab",
!1);result_ready=!0;var a=calculateReverseGreatestCommonDivisor(cards_array[0].prime_decomposition,cards_array[1].prime_decomposition);result_card=new Card(a.value);result_card.is_result_card=!0;result_card.dots_map=a.map;result_card.x=Math.floor(SVG_CENTER_X-CARD_WIDTH/2);result_card.y=Math.floor((SVG_HEIGHT-CARD_HEIGHT)/2);result_card.is_editable=!1;result_card.opacity=0;result_card.drawIt();result_card.unhideIt()}}else setHeadline("Die zweite Zahl teilt die erste nicht!",!0),console.log("The second number is not a factor of the first number!");
else setHeadline("Mindestens zwei Karten werden ben\u00f6tigt!",!0),console.log("At least two cards are needed!")}
function reverseLeastCommonMultipleAnimation(){if(1<cards_array.length)if(killRedundantCards(2),add_new_card_lock=!0,setCardLock(!0),document.title="kleinstes gemeinsames Vielfaches \u00bbr\u00fcckw\u00e4rts\u00ab",0===cards_array[1].value%cards_array[0].value){if(result_ready=!1,null!==result_card&&result_card.killIt(),drawOnscreenText("kgV"),cards_array[0].moveIt(-2*(CARD_WIDTH-CARD_MARGIN),0,0),cards_array[1].moveIt(2*(CARD_WIDTH-CARD_MARGIN),0,0),!result_ready){setHeadline("kleinstes gemeinsames Vielfaches \u00bbr\u00fcckw\u00e4rts\u00ab",
!1);result_ready=!0;var a=calculateReverseLeastCommonMultiple(cards_array[0].prime_decomposition,cards_array[1].prime_decomposition);result_card=new Card(a.value);result_card.is_result_card=!0;result_card.dots_map=a.map;result_card.x=Math.floor(SVG_CENTER_X-CARD_WIDTH/2);result_card.y=Math.floor((SVG_HEIGHT-CARD_HEIGHT)/2);result_card.is_editable=!1;result_card.opacity=0;result_card.drawIt();result_card.unhideIt()}}else setHeadline("Die erste Zahl teilt die Zweite nicht!",!0),console.log("The second number is not a multiple of the first number!");
else setHeadline("Mindestens zwei Karten werden ben\u00f6tigt!",!0),console.log("At least two cards are needed!")}function removeLatestCardAnimation(){0<cards_array.length?cards_array[cards_array.length-1].is_editable?cards_array.pop().killIt():(setHeadline("Die Karte ist vom L\u00f6schen gesch\u00fctzt!",!0),console.log("The card is protected!")):(setHeadline("Keine Karten vorhanden!",!0),console.log("No cards!"))}window.onload=function(a){};
window.onresize=function(){SVG_WIDTH=window.innerWidth;SVG_HEIGHT=window.innerHeight;SVG_CENTER_X=Math.floor(SVG_WIDTH/2);SVG_CENTER_Y=Math.floor(SVG_HEIGHT/2);s.remove();s=new Snap(SVG_WIDTH,SVG_HEIGHT)};
document.onkeypress=function(a){120!==a.keyCode&&120!==a.charCode||removeLatestCardAnimation();103!==a.keyCode&&103!==a.charCode||greatestCommonDivisorAnimation();107!==a.keyCode&&107!==a.charCode||leastCommonMultipleAnimation();104!==a.keyCode&&104!==a.charCode||reverseGreatestCommonDivisorAnimation();108!==a.keyCode&&108!==a.charCode||reverseLeastCommonMultipleAnimation();if((32===a.keyCode||32===a.charCode)&&result_ready){for(a=0;a<cards_array.length;a++)cards_array[a].moveIt((a-1)*(CARD_WIDTH+
CARD_MARGIN),0,0),cards_array[a].unhideIt();result_card.hideIt()}};
document.getElementById("new_value").onchange=function(){if(add_new_card_lock)setHeadline("Keine neuen Karten erlaubt!",!0),console.log("No new cards are allowed!");else{setHeadline("",!1);var a=document.getElementById("new_value"),b=parseInt(a.value,10);a.value="";if(0<b)if(console.log("New value: "+b),a=primeDecompose(b),console.log("Prime decomposition: "+decompositionToString(a)),tooManyEqualPrimeFactors(HOLE_COLUMNS,a))setHeadline("Mehr als "+HOLE_COLUMNS+" gleiche Primfaktoren!",!0),console.log("More than "+
HOLE_COLUMNS+" equal prime factors!");else if(tooLargePrimeFactor(a)&&1!==b)setHeadline("Einer der Primfaktoren ist zu gro\u00df!",!0),console.log("One of prime factors is too big!");else{b=new Card(b);b.x=Math.floor(SVG_CENTER_X-CARD_WIDTH/2);b.y=Math.floor((SVG_HEIGHT-CARD_HEIGHT)/2);cards_array.push(b);for(a=0;a<cards_array.length-1;a++)cards_array[a].moveIt(Math.floor((cards_array.length-a-2)*(CARD_WIDTH+CARD_MARGIN)),0,0);cards_array[cards_array.length-1].drawIt();1<cards_array.length&&b.moveIt(-1*
Math.floor(CARD_WIDTH+CARD_MARGIN),0,0)}else setHeadline("Die Zahl muss gr\u00f6\u00dfer Null sein!",!0),console.log("The number has to be positive!")}};